services:
  api:
    build:
      context: ..
      dockerfile: infra/Dockerfile.api
    ports:
      - "${API_PORT:-8000}:${API_PORT:-8000}"
    env_file: ../.env
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://${API_HOST}:${API_PORT}/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30

  ui:
    build:
      context: ..
      dockerfile: infra/Dockerfile.ui
    ports:
      - "${UI_PORT:-8501}:${UI_PORT:-8501}"
    env_file: ../.env
    depends_on:
      api:
        condition: service_healthy

  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ecom}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ecom}
      POSTGRES_DB: ${POSTGRES_DB:-ecom}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:4
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
